
set(LIBAUDIBLECONVERTER libAudibleConverter)
find_package(QT NAMES Qt6 Qt5 COMPONENTS Core REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core REQUIRED)
file(GLOB SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp" "${CMAKE_CURRENT_SOURCE_DIR}/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/*.ui")
set(PROJECT_SOURCES ${SOURCE_FILES})

set(OUTDIR CMAKE_ARCHIVE_OUTPUT_DIRECTORY)
add_library(${LIBAUDIBLECONVERTER} SHARED ${PROJECT_SOURCES}
)

target_include_directories(${LIBAUDIBLECONVERTER} PUBLIC ${CMAKE_SOURCE_DIR}/sdk/include)
target_link_libraries(${LIBAUDIBLECONVERTER} Qt${QT_VERSION_MAJOR}::Core)



#SET_TARGET_PROPERTIES(${LIBAUDIBLECONVERTER} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

# 设置动态库输出路径
SET(LIBRARY_OUTPUT_PATH ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}) 
#SET_TARGET_PROPERTIES(${LIBAUDIBLECONVERTER} PROPERTIES XCODE_ATTRIBUTE_CONFIGURATION_BUILD_DIR ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

# 编写后处理脚本，将库复制到生成目录
IF (WIN32)
add_custom_command(
  TARGET ${LIBAUDIBLECONVERTER} POST_BUILD
  COMMAND xcopy  "\"${CMAKE_SOURCE_DIR}/sdk/win/bin\"" "\"$(OutDir)\""  /E /Y
  )
ELSE()
  if(CMAKE_GENERATOR MATCHES "Xcode")
      set(OUTDIR ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/Debug)
  endif()
    add_custom_command(
  TARGET ${LIBAUDIBLECONVERTER} POST_BUILD
  COMMAND cp -r -f "\"${CMAKE_SOURCE_DIR}/sdk/mac/bin/bin\"" "${OUTDIR}"  
  COMMAND cp -r -f "\"${CMAKE_SOURCE_DIR}/sdk/mac/bin/plugins\"" "${OUTDIR}"  
  )
ENDIF()
  
# set_target_properties(libAudibleConverter PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "$(OutDir)")

